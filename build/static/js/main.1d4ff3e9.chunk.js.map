{"version":3,"sources":["components/Robot.jsx","components/Robots.jsx","App.jsx","index.jsx"],"names":["Robot","robot","useState","details","setDetails","imageUrl","id","className","onClick","name","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","src","alt","style","paddingBottom","Robots","tableRobots","map","App","spinner","setSpinner","robots","setRobots","robotFilter","setRobotFilter","useEffect","fetch","then","r","json","data","type","placeholder","onChange","e","event","result","searchWord","target","value","filter","toLowerCase","includes","toUpperCase","console","log","searchRobot","ReactDOM","render","document","querySelector"],"mappings":"4LAuCeA,EArCD,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAAW,EACIC,oBAAS,GADb,mBAChBC,EADgB,KACRC,EADQ,KAEjBC,EAAQ,+BAA2BJ,EAAMK,IAC/C,OACI,qBAAKC,UAAU,OAAOC,QAAW,kBAAIJ,GAAYD,IAAjD,SACEA,EACD,gCACI,6BAAKF,EAAMQ,OACX,mCAAMR,EAAMS,YACZ,4BAAIT,EAAMU,QACV,gCACG,4BAAIV,EAAMW,QAAQC,SAClB,4BAAIZ,EAAMW,QAAQE,QAClB,4BAAIb,EAAMW,QAAQG,OAClB,4BAAId,EAAMW,QAAQI,UAClB,gCACI,4BAAIf,EAAMW,QAAQK,IAAIC,MACtB,4BAAIjB,EAAMW,QAAQK,IAAIE,YAK7B,4BAAIlB,EAAMmB,QACV,4BAAInB,EAAMoB,UACX,gCACK,4BAAIpB,EAAMqB,QAAQb,OAClB,4BAAIR,EAAMqB,QAAQC,cAClB,4BAAItB,EAAMqB,QAAQE,WAElB,oCAAM,qBAAKC,IAAKpB,EAAUqB,IAAI,KACpC,+BAAKzB,EAAMQ,KAAX,OACA,qBAAIkB,MAAO,CAACC,cAAc,QAA1B,cAAqC3B,EAAMU,MAA3C,aCpBIkB,EAXA,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACb,OACI,qBAAKvB,UAAY,UAAjB,SACKuB,EAAYC,KAAI,SAAC9B,GAAD,OACb,cAAC,EAAD,CAAuBA,MAAOA,GAAlBA,EAAMK,UCuCnB0B,EA1CH,WAAO,IAAD,EACa9B,oBAAS,GADtB,mBACT+B,EADS,KACDC,EADC,OAEYhC,mBAAS,IAFrB,mBAETiC,EAFS,KAEDC,EAFC,OAGsBlC,mBAASiC,GAH/B,mBAGTE,EAHS,KAGIC,EAHJ,KAIhBC,qBAAU,WACRL,GAAW,GACXM,MAAM,6CACHC,MAAK,SAACC,GAAD,OAAOA,EAAEC,UACdF,MAAK,SAACG,GACLV,GAAW,GACXE,EAAUQ,GACVN,EAAeM,QAEnB,IAcF,OACE,qBAAKrC,UAAU,YAAf,SACC0B,EAAU,qBAAK1B,UAAU,UAAf,2BAAgD,gCAC3D,iDACC,sBAAKA,UAAU,SAAf,cAAyB,uBACtBsC,KAAK,OACLC,YAAY,qBACZC,SAAU,SAACC,GAAD,OAnBI,SAACC,GACnB,IACIC,EADAC,EAAaF,EAAMG,OAAOC,MAE9BH,EAASf,EAAOmB,QACd,SAACrD,GAAD,OACEA,EAAMQ,KAAK8C,cAAcC,SAASL,EAAWI,gBAC7CtD,EAAMQ,KAAKgD,cAAcD,SAASL,EAAWM,kBAEjDC,QAAQC,IAAIT,GACZZ,EAAeY,GAUMU,CAAYZ,SAE/B,cAAC,EAAD,CAAQlB,YAAaO,U,MCnC3BwB,IAASC,OAAO,cAAC,EAAD,IAAUC,SAASC,cAAc,Y","file":"static/js/main.1d4ff3e9.chunk.js","sourcesContent":["import { useState } from \"react\";\n\nconst Robot = ({robot}) => {\n    const [details,setDetails]=useState(false)\n    const imageUrl = `https://robohash.org/${robot.id}`\n    return (\n        <div className=\"card\" onClick = {()=>setDetails(!details)}> \n         {details ? \n         <div>\n             <h3>{robot.name}</h3>\n             <h3> {robot.username}</h3>\n             <p>{robot.email}</p>\n             <div>\n                <p>{robot.address.street}</p>\n                <p>{robot.address.suite}</p>\n                <p>{robot.address.city}</p>\n                <p>{robot.address.zipcode}</p>\n                <div>\n                    <p>{robot.address.geo.lat}</p>\n                    <p>{robot.address.geo.lng}</p>\n                </div>\n             \n             </div>\n             \n             <p>{robot.phone}</p>\n             <p>{robot.website}</p>\n            <div>\n                 <p>{robot.company.name}</p>\n                 <p>{robot.company.catchPhrase}</p>\n                 <p>{robot.company.bs}</p>\n            </div>\n         </div>: <div> <img src={imageUrl} alt=\"\"/> \n           <h3>{robot.name} </h3>\n           <h4 style={{paddingBottom:\"20px\"}}> {robot.email} </h4>\n          </div> }\n        </div>\n    )\n}\n\nexport default Robot\n","import Robot from \"./Robot\"\n\nconst Robots = ({tableRobots}) => {\n    return (\n        <div className = \"content\">\n            {tableRobots.map((robot)=>(\n                <Robot key={robot.id}  robot={robot} />\n            ))}\n            \n        </div>\n    )\n}\n\nexport default Robots\n","import { useState, useEffect } from \"react\";\nimport Robots from \"./components/Robots\";\n\nconst App = () => {\n  const [spinner,setSpinner] = useState(false);\n  const [robots, setRobots] = useState([]);\n  const [robotFilter, setRobotFilter] = useState(robots);\n  useEffect(() => {\n    setSpinner(true)\n    fetch(\"http://jsonplaceholder.typicode.com/users\")\n      .then((r) => r.json())\n      .then((data) => {\n        setSpinner(false)\n        setRobots(data);\n        setRobotFilter(data);\n      });\n  },[]);\n\n  const searchRobot = (event) => {\n    let searchWord = event.target.value;\n    let result = [];\n    result = robots.filter(\n      (robot) =>\n        robot.name.toLowerCase().includes(searchWord.toLowerCase()) ||\n        robot.name.toUpperCase().includes(searchWord.toUpperCase())\n    );\n    console.log(result)\n    setRobotFilter(result);\n  };\n\n  return (\n    <div className=\"container\">\n    {spinner ? <div className=\"loading\">Chargement...</div> :  <div>\n    <h1>Mes Amis Robots</h1>\n     <div className=\"search\"> <input\n        type=\"text\"\n        placeholder=\"Rechercher par nom\"\n        onChange={(e) => searchRobot(e)}\n      /></div>\n      <Robots tableRobots={robotFilter} />\n    </div>}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\"\n\nReactDOM.render(<App /> , document.querySelector(\"#root\"));"],"sourceRoot":""}